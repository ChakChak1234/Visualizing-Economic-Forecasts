{
    "collab_server" : "",
    "contents" : "# Install Packages\ninstall.packages(c(\"shiny\", \"ggplot2\", \"tidyr\", \"dplyr\", \"tidyverse\",\n                   \"gridExtra\", \"latticeExtra\"))\n\n# Load Libaries\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(gridExtra)\nlibrary(latticeExtra)\n\ndata_long <- read.csv(\"Mauritius.csv\", header=TRUE, sep=\",\")\n\n# Drop columns\ndata_long <- select(data_long, -c(X, PopulationWeight, ElasticityIncomeDemand))\n\n# Rename Scenario factor levels\ndata_long <- data_long %>%\n  mutate(Scenario = recode(Scenario, \n                           Scenario_base = \"Base\",\n                           Scenario_25 = \"Pro-Poor\",\n                           Scenario_50 = \"Pro-Poor & Middle Class\")\n  )\n\n# Pre-process dataframe for mainplot by taking \n# the mean of each variable grouping\ndf <- data_long %>%\n  group_by(Variable, Country, Scenario, Year) %>%\n  summarise_each(funs(mean))\n\n# Pre-process dataframe for subplots\ndata_long$Dummy1 <- ifelse(data_long$Quantile >= 900, \"Top 10%\", \n                           ifelse(data_long$Quantile <= 499, \"Bottom 50%\",\"Middle Class\"))\n\ndf_subplot <- select(data_long, -Quantile) %>% # Include variable to split quantiles into groups\n  group_by(Variable, Country, Scenario, Year, Dummy1) %>%\n  summarise_each(funs(mean))\n\n# Split into smaller data frames\ndf_subplot_base <- df_subplot[df_subplot[,'Scenario'] == 'Base',]\ndf_subplot_25 <- df_subplot[df_subplot[,'Scenario'] == 'Pro-Poor',]\ndf_subplot_50 <- df_subplot[df_subplot[,'Scenario'] == 'Pro-Poor & Middle Class',]\n\n\nui <- fluidPage(\n  titlePanel(\"Economic Forecasts\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"variableInput\", \"Variable\",\n                  choices = c(\"Income\", \"Electricity\"),\n                  selected = \"Income\"),\n      uiOutput(\"countryOutput\"),\n      h4(\"Base Scenario\"),\n      h6(\"Using an income growth rate of 3.0 percent as forecasted in 2008\"),\n      h4(\"Pro-Poor Scenario\"),\n      h6(\"In this scenario, the bottom 25 percent receive an amount of 6.909 dollars\n         corresponding to the cost of mean electricity consumption (53.146KW)\n         observed in 2014\"),\n      h4(\"Pro-Poor & Middle-Class\"),\n      h6(\"This scenario stimulate the economy by providing fund to the bottom 25 percent\n         as in the pro-poor scenario, and in addition, it distributes half of the cost of the\n         mean electricity annually consumed to the households belonging to the income class 25-50 percent\"),\n      width = 2),\n    mainPanel(\n      plotOutput(\"mainplot\"),\n      downloadButton(\"downloadmainplot\", \"Download the mainplot\"),\n      downloadButton(\"downloaddata\", \"Download the data\"),\n      plotOutput(\"subplots\"),\n      downloadButton(\"downloadsubplots\", \"Download the subplots\")\n    )\n      )\n      )\n\nserver <- function(input, output, session) {\n  output$countryOutput <- renderUI({\n    selectInput(\"countryInput\", \"Country\",\n                sort(unique(df$Country)),\n                selected = \"Mauritius\")\n  })  \n  \n  filtered <- reactive({\n    if (is.null(input$countryInput)) {\n      return(NULL)\n    }    \n    \n    df %>%\n      filter(Variable == input$variableInput,\n             Country == input$countryInput\n      )\n    \n  })\n  \n  output$mainplot <- renderPlot({\n    if (is.null(filtered())) {\n      return()\n    }\n    \n    ggplot(filtered(), aes(x = Year, y = Value, group = Scenario, colour = Scenario)) +\n      geom_line() +\n      geom_point(size=4, shape=21, fill=\"white\") +\n      labs(title=\"Let's Compare Scenarios\")\n    \n  })\n  \n  output$downloadmainplot <- downloadHandler(\n    filename <- function(){\n      paste('mainplot', 'png', sep=\".\")\n    },\n    content <- function(file){\n      png(file)\n      \n      printmainplot <- ggplot(filtered(), aes(x = Year, y = Value, group = Scenario, colour = Scenario)) +\n        geom_line() + geom_point(size=4, shape=21, fill=\"white\") + labs(title=\"Let's Compare Scenarios\")\n      \n      print(printmainplot)\n      \n      dev.off()\n    },\n    contentType = \"image/png\"\n  )\n  \n  filtered_subplot_base <- reactive({\n    if (is.null(input$countryInput)) {\n      return(NULL)\n    }    \n    \n    df_subplot_base %>%\n      filter(Variable == input$variableInput,\n             Country == input$countryInput\n      )\n    \n  })\n  \n  filtered_subplot_25 <- reactive({\n    if (is.null(input$countryInput)) {\n      return(NULL)\n    }    \n    \n    df_subplot_25 %>%\n      filter(Variable == input$variableInput,\n             Country == input$countryInput\n      )\n    \n  })\n  \n  filtered_subplot_50 <- reactive({\n    if (is.null(input$countryInput)) {\n      return(NULL)\n    }    \n    \n    df_subplot_50 %>%\n      filter(Variable == input$variableInput,\n             Country == input$countryInput\n      )\n    \n  })\n  \n  output$subplots <- renderPlot({\n    if (is.null(filtered_subplot_base())) {\n      return()\n    }\n    \n    \n    p1 <- ggplot(filtered_subplot_base(), aes(x = Year, y = Value, group = Dummy1, colour = Dummy1)) +\n      geom_line() +\n      geom_point(size=4, shape=21, fill=\"white\") +\n      labs(title=\"Base Scenario\")\n    p2 <- ggplot(filtered_subplot_25(), aes(x = Year, y = Value, group = Dummy1, colour = Dummy1)) +\n      geom_line() +\n      geom_point(size=4, shape=21, fill=\"white\") +\n      labs(title=\"Pro-Poor Scenario\")\n    p3 <- ggplot(filtered_subplot_50(), aes(x = Year, y = Value, group = Dummy1, colour = Dummy1)) +\n      geom_line() +\n      geom_point(size=4, shape=21, fill=\"white\") +\n      labs(title=\"Pro-Poor & Middle-Class Scenario\")\n    grid.arrange(p1,p2,p3, ncol=3)\n    \n    #extract legend\n    g_legend<-function(a.gplot){\n      tmp <- ggplot_gtable(ggplot_build(a.gplot))\n      leg <- which(sapply(tmp$grobs, function(x) x$name) == \"guide-box\")\n      legend <- tmp$grobs[[leg]]\n      return(legend)}\n    \n    mylegend<-g_legend(p1)\n    \n    grid.arrange(arrangeGrob(p1 + theme(legend.position=\"none\"),\n                             p2 + theme(legend.position=\"none\"),\n                             p3 + theme(legend.position=\"none\"),\n                             nrow=1),\n                 mylegend, nrow=2,heights=c(10, 3))\n    \n  })\n  \n  output$downloadsubplots <- downloadHandler(\n    filename <- function(){\n      paste('subplots', 'png', sep=\".\")\n    },\n    content <- function(file){\n      png(file)\n      \n      p1 <- ggplot(filtered_subplot_base(), aes(x = Year, y = Value, group = Dummy1, colour = Dummy1)) +\n        geom_line() +\n        geom_point(size=4, shape=21, fill=\"white\") +\n        labs(title=\"Base Scenario\") +\n        theme(plot.title = element_text(size=8))\n      p2 <- ggplot(filtered_subplot_25(), aes(x = Year, y = Value, group = Dummy1, colour = Dummy1)) +\n        geom_line() +\n        geom_point(size=4, shape=21, fill=\"white\") +\n        labs(title=\"Pro-Poor Scenario\") +\n        theme(plot.title = element_text(size=8))\n      p3 <- ggplot(filtered_subplot_50(), aes(x = Year, y = Value, group = Dummy1, colour = Dummy1)) +\n        geom_line() +\n        geom_point(size=4, shape=21, fill=\"white\") +\n        labs(title=\"Pro-Poor & Middle-Class Scenario\") +\n        theme(plot.title = element_text(size=8))\n      grid.arrange(p1,p2,p3, ncol=3)\n      \n      #extract legend\n      g_legend<-function(a.gplot){\n        tmp <- ggplot_gtable(ggplot_build(a.gplot))\n        leg <- which(sapply(tmp$grobs, function(x) x$name) == \"guide-box\")\n        legend <- tmp$grobs[[leg]]\n        return(legend)}\n      \n      mylegend<-g_legend(p1)\n      \n      printsubplots <- grid.arrange(arrangeGrob(p1 + theme(legend.position=\"none\"),\n                                                p2 + theme(legend.position=\"none\"),\n                                                p3 + theme(legend.position=\"none\"),\n                                                nrow=1),\n                                    mylegend, nrow=2,heights=c(10, 3))\n      \n      print(printsubplots)\n      \n      dev.off()\n    },\n    contentType = \"image/png\"\n  )\n  \n}\n\nshinyApp(ui = ui, server = server)\n\n",
    "created" : 1497972316968.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2049802596",
    "id" : "59A7BBBC",
    "lastKnownWriteTime" : 1497991435,
    "last_content_update" : 1497991435988,
    "path" : "C:/Users/dpad.intern3/Desktop/Projects/microsimulation/Microsimulation_Mauritius/WorkingVersion_06202017.R",
    "project_path" : "WorkingVersion_06202017.R",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}