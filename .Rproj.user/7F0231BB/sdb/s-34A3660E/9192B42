{
    "collab_server" : "",
    "contents" : "# Load Libaries\nlibrary(shiny)\nlibrary(\"highcharter\")\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(gridExtra)\nlibrary(latticeExtra)\n\n# Read CSVs\nscenario_base <- read.csv('base_scenario_aggregated', header=TRUE, sep=\",\")\nscenario_25 <- read.csv('scenario_25_aggregated', header=TRUE, sep=\",\")\nscenario_50 <- read.csv('scenario_50_aggregated', header=TRUE, sep=\",\")\n\n# Remove extra columns\nscenario_25 <- scenario_25[,-7]\nscenario_base <- scenario_base[,-7]\n\n# Merge data frames\ndata <- do.call(rbind, Map(cbind, Scenario = c(\"Scenario_base\",\"Scenario_25\",\"Scenario_50\"), \n                           mget(paste0(\"scenario\", c(\"_base\", \"_25\",\"_50\")))))\n\n# Reset row.names and remove more columns\nrownames(data) <- NULL\ndata<-data[,(-2:-3)]\n\n# Reshape dataframe from wide to long\ndata_long <- data %>% \n  gather(var_year, Value, starts_with(\"Income\"), starts_with(\"Electricity\")) %>% \n  separate(var_year, c(\"Variable\", \"Year\"), -5)\n\n# Add Column for country, and reorganize data frame\ndata_long[\"Country\"] <- as.factor(\"Mauritius\")\ndata_long <- data_long[c('Variable', 'Country', 'Scenario', 'Year', 'Quantile', 'Value', \n                         'PopulationWeight', 'ElasticityIncomeDemand')]\n\n# Convert from character to integer\ndata_long$Year <- as.integer(data_long$Year)\n\n# Write to csv\nwrite.csv(x = data_long, file = \"Mauritius.csv\")\n\n\n\nui <- fluidPage(\n  h1(\"Economic Forecasts in several countries\"),\n  fluidRow(\n    column(width = 1.5, class = \"panel\",\n           selectInput(\"Country\", label = \"Country\", width = \"100%\",\n                       choices = c(\"Mauritius\", \"Uganda\", \"Mexico\", \"Bolivia\")), \n           selectInput(\"Variable\", label = \"Variable\",  width = \"100%\",\n                       choices = c(\"Income\", \"Electricity Consumption\"))\n    ),\n    column(width = 11, \"Main Plot\",\n           highchartOutput(\"hcontainer\", height = \"500px\"),\n           fixedRow(\n             column(3,\n                    \"Base Scenario\",\n                    highchartOutput(\"hcontainer\",height = \"500px\")\n                  ),\n             column(3,\n                    \"Pro-Poor\",\n                    highchartOutput(\"hcontainer\",height = \"500px\")\n                    ),\n             column(3,\n                    \"Pro-Poor & Middle Class\",\n                    highchartOutput(\"hcontainer\",height = \"500px\")\n                    )\n           )\n    )\n  )\n)\n\n#server = function(input, output) {\n  \n#  output$hcontainer <- renderHighchart({\n    \n#    hc <- hc(data_long, \"line\", hcaes(x = Year, y = Value, group = Scenario),\n#             color = c(\"#e5b13a\", \"#4bd5ee\", \"#4AA942\")) %>%\n#      hc_title(\n#        text = \"Differences Across Scenarios\", \n#        useHTML = TRUE) %>%\n#      hc_tooltip(table = TRUE, sort = TRUE) %>%\n#      hc_credits(\n#        enabled = TRUE,\n#        text = \"Source: United Nations Data\") %>%\n#      hc_add_theme(hc_theme_538()) %>%\n#      hc_exporting(\n#        enabled = TRUE\n#      )\n#    \n#  })\n  \n#}\n\nserver <- function(input, output){\n  # Define variable tab and filter out data according to selection\n  output$variableSelectorOutput <- renderUI({\n    selectInput(\"variableInput\", \"Variable\",\n                sort(unique(data_long$Variable)),\n                selected = \"Income\")\n  })\n  # Define country tab and filter out data according to selection\n  output$countrySelectorOutput <- renderUI({\n    selectInput(\"countryInput\", \"Country\",\n                sort(unique(data_long$Country)),\n                selected = \"Mauritius\")\n  })\n  \n  Value <- reactive({\n    Value <- data_long\n    \n    if(is.null(input$countryInput)){\n      return(NULL)\n      \n    }\n    \n    Value <- dplyr::filter(Value, Variable %in% input$variableInput)\n    #if(input$filterVariable){\n    #  Value <- dplyr::filter(Value, Variable == input$variableInput)\n    #}\n    \n    Value <- dplyr::filter(Value, Country %in% input$countryInput)\n    \n    \n    if(nrow(Value) == 0){\n      return(NULL)\n    }\n    \n    Value\n    \n  })\n  \n  \n  output$hcontainer <- renderHighchart({\n    \n      hc <- hc(data_long, \"line\", hcaes(x = Year, y = Value, group = Scenario),\n               color = c(\"#e5b13a\", \"#4bd5ee\", \"#4AA942\")) %>%\n        hc_title(\n          text = \"Differences Across Scenarios\", \n          useHTML = TRUE) %>%\n        hc_tooltip(table = TRUE, sort = TRUE) %>%\n        hc_credits(\n          enabled = TRUE,\n          text = \"Source: United Nations Data\") %>%\n        hc_add_theme(hc_theme_538()) %>%\n        hc_exporting(\n          enabled = TRUE\n        )\n    \n    \n  })\n  \n}\n\n\nshinyApp(ui = ui, server = server)\n\n\n",
    "created" : 1496254042303.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1692086058",
    "id" : "9192B42",
    "lastKnownWriteTime" : 1499975463,
    "last_content_update" : 1499975463331,
    "path" : "C:/Users/dpad.intern3/Desktop/Projects/microsimulation/Microsimulation_Mauritius/test.R",
    "project_path" : "test.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}